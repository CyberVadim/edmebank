plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'jacoco'
}

group = 'com.edmebank'
version = '1.0.0'

dependencies {
    // Модули проекта
    implementation project(':common')

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'net.sourceforge.tess4j:tess4j:5.4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring Cloud
    implementation libs.spring.cloud.openfeign

    // БД и миграции
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'

    // OpenAPI / Swagger
    implementation libs.springdoc.openapi

    // MapStruct
    implementation libs.mapstruct
    annotationProcessor libs.mapstruct.processor
    annotationProcessor libs.lombok.mapstruct.binding

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

jacoco {
    toolVersion = "0.8.12"
}

tasks.withType(Test){
    useJUnitPlatform()
}

test.finalizedBy jacocoTestReport

jacocoTestReport {
    dependsOn test
    reports {
        csv.required = true
        csv.destination file("${layout.buildDirectory.get()}/jacocoCsv")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['com/edmebank/clientmanagement/model/**',
                                        'com/edmebank/clientmanagement/dto/**'])
        }))
    }
}
